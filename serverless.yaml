# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: chaotictoejam
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: serverless-api-go-example
# AWS service name.
service: serverless-api-go-example

custom:
  recipesTableName: Recipes
  recipesTableArn: # ARNs are addresses of deployed services in AWS space.
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - table/${self:custom.recipesTableName}

provider:
  name: aws
  runtime: provided.al2023
  architecture: arm64
  stage: dev
  region: us-east-1
  environment:
    RECIPES_TABLE_NAME: ${self:custom.recipesTableName}
  iam:
    role:
      name: dynamodb-lambda-${self:provider.stage}-role
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - ${self:custom.recipesTableArn}

package:
 individually: true

functions:
  createRecipe:
    handler: bootstrap
    package:
     artifact: ./build/createRecipe.zip
    events:
      - http:
          path: recipe
          method: post
          cors: true
  getRecipeById:
    handler: bootstrap
    package:
     artifact: ./build/getRecipeById.zip
    events:
      - http:
          path: recipes/{id}
          method: get
          cors: true
  getRecipes:
    handler: bootstrap
    package:
     artifact: ./build/getRecipes.zip
    events:
      - http:
          path: recipes
          method: get
          cors: true
  updateRecipe:
    handler: bootstrap
    package:
     artifact: ./build/updateRecipe.zip
    events:
      - http:
          path: recipe/{id}
          method: put
          cors: true
          
resources:
  Resources:
    recipesTable: # Define a new DynamoDB Table resource to store items
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Recipes
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH